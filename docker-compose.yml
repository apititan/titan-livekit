# This file used for both developer and demo purposes.
# It contains environment
version: '3.7'

services:
  traefik:
    image: traefik:v2.2.1
    hostname: traefik
    restart: unless-stopped
    # The Static Configuration
    command: --configFile=/traefik_conf/traefik.yml
    ports:
      - 8081:80
      - 8010:8080
    extra_hosts:
      # When you apply firewalld rule these requests will go to you IDE-launched chat app
      # see also network definition in bottom
      - "api.site.local:172.28.0.1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik_conf:/traefik_conf
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

  # static server
  nginx:
    image: nginx:1.16.0
    restart: unless-stopped
    ports:
      - 8082:80
    networks:
      backend:
    volumes:
      - ./frontend-nginx:/usr/share/nginx/html:ro
      - ./docker/nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
  postgres:
    image: postgres:12.2
    restart: unless-stopped
    ports:
      - 35432:5432
    volumes:
      - ./docker/postgresql_dev/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgresqlPassword
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

  redis:
    image: redis:5.0.5
    hostname: redis
    restart: unless-stopped
    ports:
      - 36379:6379
    volumes:
      - redis_data_dir:/data
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

  jaeger:
    image: jaegertracing/all-in-one:1.18.1
    hostname: jaeger
    restart: unless-stopped
    ports:
      - 16686:16686 # web ui
      - 6831:6831/udp
      - 9411:9411
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
    command: ["--collector.zipkin.http-port=9411"]
volumes:
  postgres_data:
  redis_data_dir:

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        # Also see firewalld rule in readme.md "Allow container -> host"
        - subnet: 172.28.0.0/24
